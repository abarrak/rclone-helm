# Daily, at 1 PM.
schedule: "0 10 * * *"
# Stop the job temorarily.
suspend: false
# Forbid or allow simultaneous run for the jobs.
concurrencyPolicy: Forbid

timeZone: ""
backoffLimit: 3
failedJobsHistoryLimit: 5
successfulJobsHistoryLimit: 5
startingDeadlineSeconds: ""

# Time to keep pods afer the job successful run.
# Useful for reference and logs.
ttlSecondsAfterFinished: "518400"

restartPolicy: OnFailure

image:
  repository: rclone/rclone
  pullPolicy: IfNotPresent
  tag: "1.68"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


##
# The rclone configuration file and command to run.
# The default: copy between two S3 buckets (usually different providers).
#
rclone:
  config: ""
  command: |
    rclone copy $RCLONE_SOURCE_REMOTE_NAME:"$SOURCE_BUCKET/" $RCLONE_DEST_REMOTE_NAME:"$DEST_BUCKET/" --config /opt/rclone.conf --log-level=DEBUG --retries=1 --fast-list --progress --ignore-checksum --metadata --metadata-include "tier=STANDARD"

envVars:
  - name: RCLONE_CONFIG_FILE
    valueFrom:
      secretKeyRef:
        name: rclone-dest-sync-config
        key: config
  - name: SOURCE_BUCKET
    value: ""
  - name: DEST_BUCKET
    value: ""
  - name: RCLONE_SOURCE_REMOTE_NAME
    value: ""
  - name: RCLONE_DEST_REMOTE_NAME
    value: ""

##
# The secret names from provider (AWS SecretManager, OCI Vault, etc.).
#
# Thi is used to populate the ExternalSecret resources holding
# the rclone remotes' credentials for source and destination.
#
# This is needed where the implicit node/workload iam role usage is not feasible.
#
sourceExternalSecret: source-s3-rclone-creds-file
destExternalSecret: destination-s3-rclone-creds-file

resources:
  requests:
    memory: "256Mi"
    cpu: "100m"
  limits:
    memory: "1024Mi"
    cpu: "700m"

volumes:
  - name: rclone-conf
    configMap:
      name: rclone
  - name: source-creds
    secret:
      secretName: rclone-source-sync-config
  - name: destination-creds
    secret:
      secretName: rclone-dest-sync-config

volumeMounts:
  - name: rclone-conf
    mountPath: /opt/rclone.conf
    subPath: rclone.conf
    readOnly: false
  - name: source-creds
    mountPath: /opt/source_provider_s3.creds
    subPath: source_provider_s3.creds
    readOnly: false

  - name: destination-creds
    mountPath: /opt/dest_provider_s3.creds
    subPath: dest_provider_s3.creds
    readOnly: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}
tolerations: []
affinity: {}
